# ==================================================
# RAG Pipeline Environment Configuration
# ==================================================
# Copy this file to .env and fill in your actual values
# Required variables are marked with [REQUIRED]
# Optional variables show their default values

# ==================================================
# AI/LLM Service Configuration [REQUIRED]
# ==================================================
# Your API key for the AI service (e.g., Google Gemini, OpenAI, etc.)
API_KEY=your_api_key_here

# Base URL for the AI service API
BASE_URL=https://generativelanguage.googleapis.com/v1beta

# AI model to use for text generation
MODEL=gemini-2.5-flash

# ==================================================
# ChromaDB Configuration
# ==================================================
# Path where ChromaDB will store vector data
CHROMA_DB_PATH=/app/chroma_db

# Embedding model for converting text to vectors
EMBEDDING_MODEL=all-MiniLM-L6-v2

# Cross-encoder model for reranking search results
CROSS_ENCODER_MODEL=cross-encoder/ms-marco-MiniLM-L-6-v2

# ==================================================
# Collection Names
# ==================================================
# Name of the main vector store collection
VECTOR_STORE_COLLECTION=Principal_Life_Insurance

# Name of the cache collection for storing frequently accessed results
CACHE_COLLECTION=Principal_Insurance_Cache

# ==================================================
# Search & Retrieval Parameters
# ==================================================
# Maximum number of initial search results to retrieve
SEARCH_RESULTS_LIMIT=10

# Number of top results to keep after reranking
RERANK_TOP_K=3

# Similarity threshold for cache hits (0.0 to 1.0)
CACHE_THRESHOLD=0.2

# ==================================================
# Application Configuration
# ==================================================
# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Host address for the API server
API_HOST=0.0.0.0

# Port for the API server
API_PORT=8000

# Environment type (development, production, testing)
ENV=development
